{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ARTA: Automatic Requirement Testability Analyzer Morteza Zakeri \u2020 \u2020 Ph.D. Student, Iran University of Science and Technology, Tehran, Iran (m-zakeri@live.com). Version 0.1.2 (20, March 2021) \u251c Download [PDF] version Abstract\u2014 Software testability is the propensity of software artifact to reveal its existing defects. Software requirements are crucial artifacts in developing software. Requirements specifications are used in both the functional and acceptance testing to ensure that a program meets its requirements. A testable requirement increases the effectiveness of testing while decreasing the cost and time. In this paper, we define requirement testability in terms of requirements smells and propose a measuring method. Index Terms: Software requirement, requirement testability, requirement smells, expert system 1 Introduction The achievement of the quality of software requirements is the first step towards software quality. Natural language is the main representation means of industrial requirements documents, which implies that requirements documents are inherently ambiguous. A Requirements Smell is an indicator of a quality violation, which may lead to a defect, with a concrete location and a concrete detection mechanism. Unfortunately, there is no publicly available tool and benchmark to detect requirement smells and measure the requirements quality. ARTA is a research project at IUST Reverse Engineering Laboratory aimed at detecting requirement smells and measuring requirement testability in all kinds of requirements expressed in natural languages. 2 Tool support An online demo of ARAT is available on http://arta.iust-parsa.ir/ . You can log-in with following credential: Demo username: User Demo password: arta@IUST and watch the examples requirements. 2.1 ARTA requirement analyzer module 2.2. ARTA requirement smell labeling module 3 Release date The full version of source code will be available as soon as the relevant paper(s) are published. 4 FAQ For any question please contact m-zakeri@live.com","title":"Home"},{"location":"#arta-automatic-requirement-testability-analyzer","text":"Morteza Zakeri \u2020 \u2020 Ph.D. Student, Iran University of Science and Technology, Tehran, Iran (m-zakeri@live.com). Version 0.1.2 (20, March 2021) \u251c Download [PDF] version Abstract\u2014 Software testability is the propensity of software artifact to reveal its existing defects. Software requirements are crucial artifacts in developing software. Requirements specifications are used in both the functional and acceptance testing to ensure that a program meets its requirements. A testable requirement increases the effectiveness of testing while decreasing the cost and time. In this paper, we define requirement testability in terms of requirements smells and propose a measuring method. Index Terms: Software requirement, requirement testability, requirement smells, expert system","title":"ARTA: Automatic Requirement Testability Analyzer"},{"location":"#1-introduction","text":"The achievement of the quality of software requirements is the first step towards software quality. Natural language is the main representation means of industrial requirements documents, which implies that requirements documents are inherently ambiguous. A Requirements Smell is an indicator of a quality violation, which may lead to a defect, with a concrete location and a concrete detection mechanism. Unfortunately, there is no publicly available tool and benchmark to detect requirement smells and measure the requirements quality. ARTA is a research project at IUST Reverse Engineering Laboratory aimed at detecting requirement smells and measuring requirement testability in all kinds of requirements expressed in natural languages.","title":"1 Introduction"},{"location":"#2-tool-support","text":"An online demo of ARAT is available on http://arta.iust-parsa.ir/ . You can log-in with following credential: Demo username: User Demo password: arta@IUST and watch the examples requirements.","title":"2 Tool support"},{"location":"#21-arta-requirement-analyzer-module","text":"","title":"2.1 ARTA requirement analyzer module"},{"location":"#22-arta-requirement-smell-labeling-module","text":"","title":"2.2. ARTA requirement smell labeling module"},{"location":"#3-release-date","text":"The full version of source code will be available as soon as the relevant paper(s) are published.","title":"3 Release date"},{"location":"#4-faq","text":"For any question please contact m-zakeri@live.com","title":"4 FAQ"},{"location":"dataset/","text":"ARTA datasets Requirement smell dataset The current version of ARTA dataset (Version 1.0) including software requirements in natural language and their smells labeled by EXPERTS can be downloaded from Zenodo: References Dataset 1 (available in pdf,doc,xml formats - xml versions used) Dataset 2 (available in txt format - needs vpn)","title":"Dataset"},{"location":"dataset/#arta-datasets","text":"","title":"ARTA datasets"},{"location":"dataset/#requirement-smell-dataset","text":"The current version of ARTA dataset (Version 1.0) including software requirements in natural language and their smells labeled by EXPERTS can be downloaded from Zenodo:","title":"Requirement smell dataset"},{"location":"dataset/#references","text":"Dataset 1 (available in pdf,doc,xml formats - xml versions used) Dataset 2 (available in txt format - needs vpn)","title":"References"},{"location":"publications/","text":"Publications To be announced. [1] [2]","title":"Publications"},{"location":"publications/#publications","text":"To be announced. [1] [2]","title":"Publications"},{"location":"related_projects/","text":"Related projects ARTA is part of Morteza ZAKERI's Ph.D. works. The relevant projects in this series are: 1 (https://m-zakeri.github.io/ADAFEST): source code testability measurement tool 2 (https://m-zakeri.github.io/CodART): source code testability improvement tool [3]","title":"Related projetcs"},{"location":"related_projects/#related-projects","text":"ARTA is part of Morteza ZAKERI's Ph.D. works. The relevant projects in this series are: 1 (https://m-zakeri.github.io/ADAFEST): source code testability measurement tool 2 (https://m-zakeri.github.io/CodART): source code testability improvement tool [3]","title":"Related projects"},{"location":"getting_started/demo/","text":"Live Demo ARTA is a research project at IUST Reverse Engineering Laboratory . An online demo of ARAT is available on http://arta.iust-parsa.ir/ . You can log-in with following credential: Demo username: User Demo password: arta@IUST and watch the examples requirements.","title":"Demo"},{"location":"getting_started/demo/#live-demo","text":"ARTA is a research project at IUST Reverse Engineering Laboratory . An online demo of ARAT is available on http://arta.iust-parsa.ir/ . You can log-in with following credential: Demo username: User Demo password: arta@IUST and watch the examples requirements.","title":"Live Demo"},{"location":"getting_started/installation/","text":"Installation Prerequisites MySql MySQL version 5.6 is required. install MySql on windows Download and install using this link . install MySql on ubuntu Following instructions on this link . Python since project based on python, python version 3.8+ needed. download python 3.8 for windows from here . Install Create a virtual environment First, install virtualenv python3 -m pip install virtualenv cd project_directory virtualenv env Activate virtual environment using: source env/bin/activate Install project's requirements Run pip install -r requirements.txt then install necessary packages for textBlob python -m textblob.download_corpora Necessary packages on ubuntu Install necessary packages for mysqlclient on ubuntu using sudo apt install python3-dev default-libmysqlclient-dev poppler-utils Project configuration First, create a mysql database for the project then create file called local_settings.py in Smella folder vim Smella/local_settings.py write following code DB_USER = 'database username' DB_PASS = 'database password' DB_HOST = 'database host' DB_NAME = 'database name' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = ['*'] then apply migration using python manage.py makemigrations python manage.py migrate then create a super user for admin page python manage.py createsuperuser until the ui fully written, create requirements and projects using admin page \"/admin/\" Running Project run project using python manage.py runserver Insert Dataset insert dataset the using. python manage.py insert_date <location of json file> <a project name for this dataset>","title":"Installation"},{"location":"getting_started/installation/#installation","text":"","title":"Installation"},{"location":"getting_started/installation/#prerequisites","text":"","title":"Prerequisites"},{"location":"getting_started/installation/#mysql","text":"MySQL version 5.6 is required.","title":"MySql"},{"location":"getting_started/installation/#install-mysql-on-windows","text":"Download and install using this link .","title":"install MySql on windows"},{"location":"getting_started/installation/#install-mysql-on-ubuntu","text":"Following instructions on this link .","title":"install MySql on ubuntu"},{"location":"getting_started/installation/#python","text":"since project based on python, python version 3.8+ needed. download python 3.8 for windows from here .","title":"Python"},{"location":"getting_started/installation/#install","text":"","title":"Install"},{"location":"getting_started/installation/#create-a-virtual-environment","text":"First, install virtualenv python3 -m pip install virtualenv cd project_directory virtualenv env Activate virtual environment using: source env/bin/activate","title":"Create a virtual environment"},{"location":"getting_started/installation/#install-projects-requirements","text":"Run pip install -r requirements.txt then install necessary packages for textBlob python -m textblob.download_corpora","title":"Install project's requirements"},{"location":"getting_started/installation/#necessary-packages-on-ubuntu","text":"Install necessary packages for mysqlclient on ubuntu using sudo apt install python3-dev default-libmysqlclient-dev poppler-utils","title":"Necessary packages on ubuntu"},{"location":"getting_started/installation/#project-configuration","text":"First, create a mysql database for the project then create file called local_settings.py in Smella folder vim Smella/local_settings.py write following code DB_USER = 'database username' DB_PASS = 'database password' DB_HOST = 'database host' DB_NAME = 'database name' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = ['*'] then apply migration using python manage.py makemigrations python manage.py migrate then create a super user for admin page python manage.py createsuperuser until the ui fully written, create requirements and projects using admin page \"/admin/\"","title":"Project configuration"},{"location":"getting_started/installation/#running-project","text":"run project using python manage.py runserver","title":"Running Project"},{"location":"getting_started/installation/#insert-dataset","text":"insert dataset the using. python manage.py insert_date <location of json file> <a project name for this dataset>","title":"Insert Dataset"}]}