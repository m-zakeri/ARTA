{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ARTA: Automatic Requirement Testability Analyzer","text":"<p>Morteza Zakeri\u2020</p> <p>\u2020 Ph.D., Computer Science, ACM Member</p> <p>Version 0.1.3 (20, April 2024) \u251c Download [PDF] version</p> <p>Abstract\u2014 Software testability is the propensity of software artifact to reveal its existing defects. Software requirements are crucial artifacts in developing software. Requirements specifications are used in both the functional and acceptance testing to ensure that a program meets its requirements.  A testable requirement increases the effectiveness of testing while decreasing the cost and time. In this project, we define requirement testability in terms of requirements smells and propose a measuring method to compute requirement testability. </p> <p>Index Terms: Software requirement, requirement testability, requirement smells, expert system</p>"},{"location":"#1-introduction","title":"1 Introduction","text":"<p>The achievement of the quality of software requirements is the first step towards software quality. Natural language is the main representation means of industrial requirements documents, which implies that requirements documents are inherently ambiguous. A Requirements Smell is an indicator of a  quality violation, which may lead to a defect, with a concrete location and a concrete detection mechanism.</p> <p>Unfortunately, there is no publicly available tool and benchmark to detect requirement smells and measure the requirements quality. ARTA is a research project at IUST Reverse Engineering Laboratory aimed at detecting requirement smells and measuring requirement testability in all kinds of requirements expressed in natural languages.</p>"},{"location":"#2-tool-support","title":"2 Tool support","text":"<p>ARTA is a web-based software requirement analysis tool using the state-of-the-art natural language processing (NLP) and statistical machine learning techniques to analyze the software requirement. An online demo of ARTA is available on  http://arta.iust-parsa.ir/. You can login with following credential:</p> <ul> <li>Demo username: User</li> <li>Demo password: arta@IUST</li> </ul> <p>and watch the examples requirements.  </p>"},{"location":"#21-requirement-analyzer","title":"2.1 Requirement analyzer","text":"<p>Requirement analyzer detects smelly words in each requirement, recognize their type, and provides a list of smelly words. The web interface also highlights smelly words in the requirement text.</p> <p>Figure 1 shows ARTA requirement smell analyzer and detector. </p> <p></p> <p>Figure 1: Requirement smell detector in ARTA</p>"},{"location":"#22-labeling-module","title":"2.2. Labeling module","text":"<p>ARAT web interface also provides an ability to label each requirement with corresponding smells. Figure 2 shows ARTA requirement labeling module.</p> <p></p> <p>Figure 2: Requirement smell labeling in ARTA</p>"},{"location":"#23-data-model","title":"2.3 Data model","text":"<p>Figure 3 shows ARTA database ERD model. All projects and their requirements are kept in a MySQL database.</p> <p></p> <p>Figure 3: ARTA data model</p>"},{"location":"#3-publications","title":"3 Publication(s)","text":"<ul> <li>[1] Zakeri-Nasrabadi, M., &amp; Parsa, S. (2024). Natural language requirements testability measurement based on requirement smells. Neural Computing and Applications. https://doi.org/10.1007/s00521-024-09730-x</li> </ul>"},{"location":"#4-news","title":"4 News","text":"<ul> <li> <p>2024-04-28: The ARTA (automated requirements testability analyzer) tool's full implementation is now publicly available.</p> </li> <li> <p>2021-10-20: Initial/partial release. The full version of source code will be available as soon as the relevant paper(s) are published.</p> </li> </ul>"},{"location":"#4-faq","title":"4 FAQ","text":"<p>For any question please contact <code>m-zakeri@live.com</code></p>"},{"location":"dataset/","title":"ARTA datasets","text":""},{"location":"dataset/#requirement-smell-dataset","title":"Requirement smell dataset","text":"<p>The current version of ARTA dataset (Version 1.0) including software requirements in natural language and their smells labeled by EXPERTS can be downloaded from Zenodo:</p> <p></p>"},{"location":"dataset/#references","title":"References","text":"<ul> <li> <p>Dataset 1 (available in pdf,doc,xml formats - xml versions used)</p> </li> <li> <p>Dataset 2 (available in txt format - needs vpn)</p> </li> </ul>"},{"location":"publications/","title":"Publications","text":"<ul> <li>[1] Zakeri-Nasrabadi, M., &amp; Parsa, S. (2024). Natural language requirements testability measurement based on requirement smells. Neural Computing and Applications. https://doi.org/10.1007/s00521-024-09730-x</li> <li></li> </ul>"},{"location":"related_projects/","title":"Related projects","text":"<p>ARTA is part of Morteza ZAKERI's Ph.D. works. The relevant projects in this series are:</p> <ol> <li> <p>ADAFETS: source code testability measurement tool</p> </li> <li> <p>CodART: source code testability improvement tool</p> </li> <li></li> </ol>"},{"location":"getting_started/demo/","title":"Live Demo","text":"<p>ARTA is a research project at IUST Reverse Engineering Laboratory. An online demo of ARAT is available on  http://arta.iust-parsa.ir/. You can log-in with following credential:</p> <ul> <li>Demo username: User</li> <li>Demo password: arta@IUST</li> </ul> <p>and watch the examples requirements.  </p>"},{"location":"getting_started/installation/","title":"Installation","text":""},{"location":"getting_started/installation/#prerequisites","title":"Prerequisites","text":""},{"location":"getting_started/installation/#mysql","title":"MySql","text":"<p>MySQL version 5.6 is required.</p>"},{"location":"getting_started/installation/#install-mysql-on-windows","title":"install MySql on windows","text":"<p>Download and install using this link.</p>"},{"location":"getting_started/installation/#install-mysql-on-ubuntu","title":"install MySql on ubuntu","text":"<p>Following instructions on this link.</p>"},{"location":"getting_started/installation/#python","title":"Python","text":"<p>since project based on python, python version 3.8+ needed.</p> <p>download python 3.8 for windows from here.</p>"},{"location":"getting_started/installation/#install","title":"Install","text":""},{"location":"getting_started/installation/#create-a-virtual-environment","title":"Create a virtual environment","text":"<p>First, install virtualenv</p> <pre><code>python3 -m pip install virtualenv\ncd project_directory\nvirtualenv env \n</code></pre> <p>Activate virtual environment using:</p> <pre><code>source env/bin/activate\n</code></pre>"},{"location":"getting_started/installation/#install-projects-requirements","title":"Install project's requirements","text":"<p>Run</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>then install necessary packages for textBlob</p> <pre><code>python -m textblob.download_corpora\n</code></pre>"},{"location":"getting_started/installation/#necessary-packages-on-ubuntu","title":"Necessary packages on ubuntu","text":"<p>Install necessary packages for mysqlclient on ubuntu using</p> <pre><code>sudo apt install python3-dev default-libmysqlclient-dev poppler-utils\n</code></pre>"},{"location":"getting_started/installation/#project-configuration","title":"Project configuration","text":"<p>First, create a mysql database for the project</p> <p>then create file called local_settings.py in Smella folder</p> <pre><code>vim Smella/local_settings.py\n</code></pre> <p>write following code</p> <pre><code>DB_USER = 'database username'\nDB_PASS = 'database password'\nDB_HOST = 'database host'\nDB_NAME = 'database name'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n</code></pre> <p>then apply migration using</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre> <p>then create a super user for admin page</p> <pre><code>python manage.py createsuperuser\n</code></pre> <p>until the ui fully written, create requirements and projects using admin page \"/admin/\"</p>"},{"location":"getting_started/installation/#running-project","title":"Running Project","text":"<p>run project using</p> <pre><code>python manage.py runserver\n</code></pre>"},{"location":"getting_started/installation/#insert-dataset","title":"Insert Dataset","text":"<p>insert dataset the using.</p> <pre><code>python manage.py insert_date &lt;location of json file&gt; &lt;a project name for this dataset&gt;\n</code></pre>"}]}